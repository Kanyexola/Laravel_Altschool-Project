---
- name: Install laravel and it's dependencies to the client node
  hosts: webservers
  become: yes
  vars:
    DOMAIN: http://3.82.139.167
    DATA_CONNNECTION: mysql
    HOST: localhost
    DATA_BASE: Kanyexola
    DB_USER: kanyexola
    DB_PASSWD: kanyinezekiel
    HOST_NAME: laravel
  tasks:
     - name: Install the following packages to the client node
       ansible.builtin.package:
          name:
            - git
            - curl
            - wget
            - unzip
            - php8.1-mysql
            - php-xml
            - php-curl
          update_cache: yes
          state: latest
     - name: add git user and email
       shell: |
         sudo git config --global user.name kanyexola
         sudo git config --global user.email kanyexola@icloud.com
     - name: Download composer installer
       ansible.builtin.get_url:
           url: https://getcomposer.org/installer
           dest: /usr/src/
     - name: Download and install composer
       shell: curl -sS https://getcomposer.org/installer | php
       args:
         chdir: /usr/src/
         creates: /usr/local/bin/composer
         warn: false
     - name: Add composer to global path
       copy:
         dest: /usr/local/bin/composer
         group: root
         mode: '0755'
         owner: root
         src: /usr/src/composer.phar
         remote_src: yes
     - name: Make a directory in /var/www path
       ansible.builtin.file:
          path: /var/www/{{ HOST_NAME }}
          state: directory
          mode: '0775'
  #   - name: Clone laravel app to client node
   #    git:
    #     repo:  https://github.com/f1amy/laravel-realworld-example-app.git
     #    dest:  /var/www/{{ HOST_NAME }}
     - name: Change ownership permission
       ansible.builtin.file:
         path: /var/www/{{ HOST_NAME }}
         state: directory
         recurse: yes
         owner: www-data
         group: www-data
     - name: Set permission for the user
       ansible.builtin.file:
         path: /var/www/{{ HOST_NAME }}
         state: directory
         recurse: yes
         mode: '0775'
     - name: Set permission for storage
       ansible.builtin.file:
         path: /var/www/{{ HOST_NAME }}/storage
         state: directory
         recurse: yes
         mode: '0775'
     - name: Set permission for bootstrap
       ansible.builtin.file:
         path: /var/www/{{ HOST_NAME }}/bootstrap/cache
         state: directory
         recurse: yes
         mode: '0775'
     - name: copy env file
       copy: 
         src: /home/server/.env
         dest: /var/www/{{ HOST_NAME }}
     - name: Remove the web.php inside routes dir
       shell: sudo rm -rf /var/www/{{ HOST_NAME }}/routes/web.php
     - name: Copy web.php to routes dir
       template:
          src: /home/server/web.php
          dest: /var/www/{{ HOST_NAME }}/routes/
     - name: Install laravel dependencies with composer install
       become: false
       community.general.composer:
         command: install
         global_command: false
         working_dir: /var/www/laravel
     - name: Remove the web.php inside routes dir
       shell: sudo rm -rf /var/www/{{ HOST_NAME }}/routes/web.php
     - name: Copy web.php to routes dir
       template:
          src: /home/server/web.php
          dest: /var/www/{{ HOST_NAME }}/routes/
     - name: Install laravel dependencies with composer install
       become: false
       community.general.composer:
         command: install
         global_command: false
         working_dir: /var/www/{{ HOST_NAME }}
     - name: Update the laravel project using composer update
       become: false
       community.general.composer:
         command: update
         working_dir: /var/www/{{ HOST_NAME }}/
         global_command: false
     - name: Generate the project key
       ansible.builtin.shell: |
         cd /var/www/{{ HOST_NAME }}/
         php artisan key:generate
     - name: clear the config cache
       ansible.builtin.shell: |
         cd /var/www/{{ HOST_NAME }}/
         sudo php artisan config:cache
    # - name: Fresh the migration table
     #  ansible.builtin.shell: |
      #   cd /var/www{{ HOST_NAME }}
       #  sudo php artisan migrate:refresh
     - name: Migrate the database
       ansible.builtin.shell: |
         cd /var/www/{{ HOST_NAME }}/
         sudo php /var/www/{{ HOST_NAME }}/ artisan migrate









